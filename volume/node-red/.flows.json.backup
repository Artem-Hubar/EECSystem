[
    {
        "id": "ed6fc9b850d374ff",
        "type": "tab",
        "label": "Поток 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1d60f77e2f32593d",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "name": "Цех 1",
        "style": {
            "label": true,
            "stroke": "#000000",
            "color": "#000000"
        },
        "nodes": [
            "fa5e7da91dbafed2",
            "2ec4518f850c8c39",
            "587f45b77529eae0",
            "55968e0848533750",
            "d94c04ce11127202",
            "c38900d4ecaa42cf",
            "7aa44d4855b16267",
            "201e278336a2a40b"
        ],
        "x": 898,
        "y": 1173,
        "w": 1328,
        "h": 294
    },
    {
        "id": "dc5a4ca141aca5d9",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "name": "Цех 2",
        "style": {
            "label": true,
            "stroke": "#000000",
            "color": "#000000"
        },
        "nodes": [
            "a7bff8dbbc10e1ee",
            "543daa9296356b77",
            "140f80d37077c2e5",
            "38368fc655a747d7",
            "d92d810ec03d2994",
            "8d6324e4b84c3c21",
            "e508b7ba44c26253",
            "c424c808617f5be2"
        ],
        "x": 908,
        "y": 1507,
        "w": 1338,
        "h": 220
    },
    {
        "id": "3b359d0aad2cca26",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "name": "Цех 3",
        "style": {
            "label": true,
            "stroke": "#000000",
            "color": "#000000"
        },
        "nodes": [
            "e5d2efe201e71691",
            "a9c807796e660481",
            "9cda28550342dbf0",
            "dc676fdb3abf8f7e",
            "60d6ceed67416d95",
            "f01ffa43f38001a4",
            "3821a06871a1cf90",
            "4b5f3d55970b8983",
            "628a3f0f8ba0748f"
        ],
        "x": 908,
        "y": 1778,
        "w": 1438,
        "h": 249
    },
    {
        "id": "b89a0935f6fe7b0a",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "name": "Timer",
        "style": {
            "label": true,
            "stroke": "#000000",
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "f6dc9a60ad3987b5",
            "8ec30c1b65ed8457",
            "7319b8fb2699fda4"
        ],
        "x": 274,
        "y": 1079,
        "w": 202,
        "h": 82
    },
    {
        "id": "55968e0848533750",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "1d60f77e2f32593d",
        "name": "",
        "style": {
            "stroke": "none",
            "label": true
        },
        "nodes": [],
        "x": 1898,
        "y": 1273,
        "w": 40,
        "h": 40
    },
    {
        "id": "140f80d37077c2e5",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "dc5a4ca141aca5d9",
        "name": "",
        "style": {
            "stroke": "none",
            "label": true
        },
        "nodes": [],
        "x": 1208,
        "y": 1533,
        "w": 40,
        "h": 40
    },
    {
        "id": "38368fc655a747d7",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "dc5a4ca141aca5d9",
        "name": "Consumer",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000",
            "label-position": "n"
        },
        "nodes": [
            "2b369c1741cc9ef6",
            "48b909505b2bfae8",
            "fb1c98c8da522669",
            "0b1328f40a1516f9"
        ],
        "x": 1564,
        "y": 1559,
        "w": 182,
        "h": 142
    },
    {
        "id": "9cda28550342dbf0",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "3b359d0aad2cca26",
        "name": "",
        "style": {
            "stroke": "none",
            "label": true
        },
        "nodes": [],
        "x": 1194,
        "y": 1804,
        "w": 40,
        "h": 40
    },
    {
        "id": "8d6324e4b84c3c21",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "dc5a4ca141aca5d9",
        "name": "Consumer",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000",
            "label-position": "n"
        },
        "nodes": [
            "bb64550542faf8c9",
            "6d40defa905a4c24",
            "36bc783664bc5319",
            "56de72dee2125192"
        ],
        "x": 1344,
        "y": 1559,
        "w": 182,
        "h": 142
    },
    {
        "id": "d94c04ce11127202",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "1d60f77e2f32593d",
        "name": "Consumer",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000",
            "label-position": "n"
        },
        "nodes": [
            "410ee238c1d9f347",
            "5358ce8276693dd9",
            "8231dcf80c6ca09a",
            "c196e93651cf910d"
        ],
        "x": 1674,
        "y": 1299,
        "w": 182,
        "h": 142
    },
    {
        "id": "c38900d4ecaa42cf",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "1d60f77e2f32593d",
        "name": "Transformer",
        "style": {
            "stroke": "#000000",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "13e68fddacb57d16",
            "75b592483e14f61c",
            "c25b13a2126a541f",
            "3",
            "b2b951f277f4734f"
        ],
        "x": 1334,
        "y": 1199,
        "w": 292,
        "h": 182
    },
    {
        "id": "60d6ceed67416d95",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "3b359d0aad2cca26",
        "name": "Consumer",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000",
            "label-position": "n"
        },
        "nodes": [
            "006d2159453d3533",
            "30271801c18339d7",
            "100940c2d95fb2b4",
            "c75694c09fd54100"
        ],
        "x": 1374,
        "y": 1859,
        "w": 182,
        "h": 142
    },
    {
        "id": "f01ffa43f38001a4",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "3b359d0aad2cca26",
        "name": "Consumer",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000",
            "label-position": "n"
        },
        "nodes": [
            "0253e0acea643727",
            "31c4945f256e5ddb",
            "da55bcf17e243f42",
            "0f5cc417cc08d9be"
        ],
        "x": 1594,
        "y": 1859,
        "w": 182,
        "h": 142
    },
    {
        "id": "3821a06871a1cf90",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "3b359d0aad2cca26",
        "name": "Consumer",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000",
            "label-position": "n"
        },
        "nodes": [
            "fb6b6821f8fc65e5",
            "c41fbb91bc8e880a",
            "2b634e503e9abf41",
            "25429cb187bfeffa"
        ],
        "x": 1814,
        "y": 1859,
        "w": 182,
        "h": 142
    },
    {
        "id": "628a3f0f8ba0748f",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "3b359d0aad2cca26",
        "name": "РЩ",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c7eb2dea3371c873",
            "08bd37463ab1899c",
            "87ddce3618d3f4e2",
            "31ca889f5b44e7e1",
            "4bd60787793c461e",
            "8378de078689c619",
            "690ef4e684a6bd33"
        ],
        "x": 934,
        "y": 1859,
        "w": 192,
        "h": 142
    },
    {
        "id": "201e278336a2a40b",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "1d60f77e2f32593d",
        "name": "РЩ",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e91d62efa5b8e092",
            "9705f1a56879f512",
            "e80a6f9cd4a8fa7a",
            "6eef64f6b9f89dde",
            "fc773309f830ab31",
            "f8ee96304d8ee4b0",
            "3175c361a41c7051"
        ],
        "x": 924,
        "y": 1299,
        "w": 192,
        "h": 142
    },
    {
        "id": "c424c808617f5be2",
        "type": "group",
        "z": "ed6fc9b850d374ff",
        "g": "dc5a4ca141aca5d9",
        "name": "РЩ",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5480dc6b15e084d4",
            "e6cc48740b1cf28e",
            "62ca22bb0dcf7e86",
            "2177c81d5fe32716",
            "a820249c46dcdec7",
            "6705a400ab98dbb8",
            "db59d1050f2f58ce"
        ],
        "x": 934,
        "y": 1559,
        "w": 172,
        "h": 142
    },
    {
        "id": "9247c215d6f5dddb",
        "type": "mqtt-broker",
        "name": "MQTT Server",
        "broker": "host.docker.internal",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c25b13a2126a541f",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "c38900d4ecaa42cf",
        "name": "Transformer",
        "func": "// Проверяем, что в msg.payload есть input_data и voltage\nif (msg.payload && msg.payload.input_data && msg.payload.input_data.voltage !== undefined && msg.payload.input_data.current !== undefined && msg.payload.transformer !== undefined) {\n    var voltage = msg.payload.input_data.voltage;\n    var current = msg.payload.input_data.current;\n    var turns_ratio = msg.payload.transformer;  // Коэффициент трансформации\n\n    // Применение коэффициента трансформации\n    var new_voltage = voltage / turns_ratio;\n    var new_current = current * turns_ratio;\n\n    // Обновляем msg.payload с новыми значениями\n    msg.payload = { voltage: new_voltage, current: new_current };\n\n    return msg; // Возвращаем сообщение с обновленным payload\n} else {\n    // Если каких-либо данных нет, не отправляем сообщение дальше\n    return null;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1505,
        "y": 1340,
        "wires": [
            [
                "b2b951f277f4734f",
                "8231dcf80c6ca09a"
            ]
        ],
        "l": false
    },
    {
        "id": "fa5e7da91dbafed2",
        "type": "debug",
        "z": "ed6fc9b850d374ff",
        "g": "1d60f77e2f32593d",
        "name": "CurrentLine1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1340,
        "wires": []
    },
    {
        "id": "3",
        "type": "join",
        "z": "ed6fc9b850d374ff",
        "g": "c38900d4ecaa42cf",
        "name": "Join",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "1",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1475,
        "y": 1340,
        "wires": [
            [
                "c25b13a2126a541f"
            ]
        ],
        "l": false
    },
    {
        "id": "ad6cc7925839a40e",
        "type": "mqtt in",
        "z": "ed6fc9b850d374ff",
        "d": true,
        "name": "TransporterDataListener",
        "topic": "client/transformer/devise1/turns_ratio",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9247c215d6f5dddb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "13e68fddacb57d16",
        "type": "mqtt in",
        "z": "ed6fc9b850d374ff",
        "g": "c38900d4ecaa42cf",
        "name": "TransporterDataListener",
        "topic": "client/transformer/device1/data",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9247c215d6f5dddb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1375,
        "y": 1240,
        "wires": [
            [
                "75b592483e14f61c"
            ]
        ],
        "l": false
    },
    {
        "id": "75b592483e14f61c",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "c38900d4ecaa42cf",
        "name": "function",
        "func": "var turns_ratio = msg.payload[\"turnsRation\"];  // Коэффициент трансформации\nmsg.payload = parseInt(turns_ratio);\nmsg.topic = \"transformer\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1465,
        "y": 1240,
        "wires": [
            [
                "3"
            ]
        ],
        "l": false
    },
    {
        "id": "cb2d47b7afe4e580",
        "type": "inject",
        "z": "ed6fc9b850d374ff",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "test",
                "v": "{\"voltage\":380,\"current\":15}",
                "vt": "json"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input_data",
        "payload": "[1, 2, 3]",
        "payloadType": "json",
        "x": 360,
        "y": 1600,
        "wires": [
            [
                "4ebf6e1f9327fbaa",
                "ba77df1a13f469b8"
            ]
        ]
    },
    {
        "id": "ba77df1a13f469b8",
        "type": "switch",
        "z": "ed6fc9b850d374ff",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "cont",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 730,
        "y": 1600,
        "wires": [
            [
                "e80a6f9cd4a8fa7a"
            ],
            [
                "62ca22bb0dcf7e86"
            ],
            [
                "87ddce3618d3f4e2"
            ]
        ]
    },
    {
        "id": "3175c361a41c7051",
        "type": "mqtt out",
        "z": "ed6fc9b850d374ff",
        "g": "201e278336a2a40b",
        "name": "sensor",
        "topic": "client/currentsensor/devise1/current",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9247c215d6f5dddb",
        "x": 1075,
        "y": 1400,
        "wires": [],
        "l": false
    },
    {
        "id": "db59d1050f2f58ce",
        "type": "mqtt out",
        "z": "ed6fc9b850d374ff",
        "g": "c424c808617f5be2",
        "name": "sensor",
        "topic": "client/currentsensor/devise2/current",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9247c215d6f5dddb",
        "x": 1065,
        "y": 1640,
        "wires": [],
        "l": false
    },
    {
        "id": "4bd60787793c461e",
        "type": "mqtt out",
        "z": "ed6fc9b850d374ff",
        "g": "628a3f0f8ba0748f",
        "name": "sensor",
        "topic": "client/currentsensor/devise3/current",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9247c215d6f5dddb",
        "x": 1085,
        "y": 1940,
        "wires": [],
        "l": false
    },
    {
        "id": "f8ee96304d8ee4b0",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "201e278336a2a40b",
        "name": "function",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "test",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "test",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "input_data",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1025,
        "y": 1340,
        "wires": [
            [
                "3175c361a41c7051",
                "3"
            ]
        ],
        "l": false
    },
    {
        "id": "6705a400ab98dbb8",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "c424c808617f5be2",
        "name": "function",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "test",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "test",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1035,
        "y": 1600,
        "wires": [
            [
                "db59d1050f2f58ce",
                "36bc783664bc5319"
            ]
        ],
        "l": false
    },
    {
        "id": "31ca889f5b44e7e1",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "628a3f0f8ba0748f",
        "name": "function",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "test",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "test",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1035,
        "y": 1900,
        "wires": [
            [
                "4bd60787793c461e",
                "100940c2d95fb2b4"
            ]
        ],
        "l": false
    },
    {
        "id": "0b548126e6b076c4",
        "type": "mqtt out",
        "z": "ed6fc9b850d374ff",
        "name": "sensor",
        "topic": "client/currentsensor/devise/current",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9247c215d6f5dddb",
        "x": 570,
        "y": 1660,
        "wires": []
    },
    {
        "id": "4ebf6e1f9327fbaa",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "name": "function",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "test",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "test",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 505,
        "y": 1660,
        "wires": [
            [
                "0b548126e6b076c4"
            ]
        ],
        "l": false
    },
    {
        "id": "1e7bcc3e77a38514",
        "type": "mqtt in",
        "z": "ed6fc9b850d374ff",
        "name": "TransporterDataListener",
        "topic": "client/currentsensor/devise/data",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9247c215d6f5dddb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "b2b951f277f4734f",
        "type": "mqtt out",
        "z": "ed6fc9b850d374ff",
        "g": "c38900d4ecaa42cf",
        "name": "sensor",
        "topic": "client/currentsensor/devise4/current",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9247c215d6f5dddb",
        "x": 1585,
        "y": 1240,
        "wires": [],
        "l": false
    },
    {
        "id": "2ec4518f850c8c39",
        "type": "mqtt in",
        "z": "ed6fc9b850d374ff",
        "g": "1d60f77e2f32593d",
        "name": "Generator",
        "topic": "client/generetor/device1/data",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9247c215d6f5dddb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1220,
        "y": 1400,
        "wires": [
            [
                "587f45b77529eae0"
            ]
        ]
    },
    {
        "id": "587f45b77529eae0",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "1d60f77e2f32593d",
        "name": "function 1",
        "func": "if (msg.payload && msg.payload.isWorking) {\n    if (msg.payload.input_data) {         \n        msg.payload = msg.payload.input_data;\n        msg.topic = \"input_data\";\n        return msg;\n    }\n}\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1295,
        "y": 1400,
        "wires": [
            [
                "3"
            ]
        ],
        "l": false
    },
    {
        "id": "a7bff8dbbc10e1ee",
        "type": "mqtt in",
        "z": "ed6fc9b850d374ff",
        "g": "dc5a4ca141aca5d9",
        "name": "Generator",
        "topic": "client/generetor/device2/data",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9247c215d6f5dddb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1220,
        "y": 1660,
        "wires": [
            [
                "543daa9296356b77"
            ]
        ]
    },
    {
        "id": "543daa9296356b77",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "dc5a4ca141aca5d9",
        "name": "function 2",
        "func": "if (msg.payload && msg.payload.isWorking) {\n    if (msg.payload.input_data) {         \n        msg.payload = msg.payload.input_data;\n        msg.topic = \"input_data\";\n        return msg;\n    }\n}\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1285,
        "y": 1660,
        "wires": [
            [
                "36bc783664bc5319"
            ]
        ],
        "l": false
    },
    {
        "id": "2b369c1741cc9ef6",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "38368fc655a747d7",
        "name": "function",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"consumed\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1675,
        "y": 1660,
        "wires": [
            [
                "48b909505b2bfae8"
            ]
        ],
        "l": false
    },
    {
        "id": "48b909505b2bfae8",
        "type": "mqtt out",
        "z": "ed6fc9b850d374ff",
        "g": "38368fc655a747d7",
        "name": "sensor",
        "topic": "client/consumersensor/device2/data",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9247c215d6f5dddb",
        "x": 1705,
        "y": 1660,
        "wires": [],
        "l": false
    },
    {
        "id": "fb1c98c8da522669",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "38368fc655a747d7",
        "name": "Consumer",
        "func": "let source = msg.payload;\nlet coefficients = global.get(\"coefficients\")\nlet index = global.get(\"index\")\nlet currentCoefficients = coefficients[index];\nlet consumption_ratio = Math.random() * currentCoefficients[1];\nlet staticCurrentСonsumption = source[\"current\"]*0.1;\nlet consumedCurrent = source[\"current\"] * consumption_ratio + staticCurrentСonsumption;\nlet outPutCurrent = source[\"current\"] - consumedCurrent;\nmsg.payload[\"output\"] = {\"voltage\":source[\"voltage\"], \"current\":outPutCurrent}\nmsg.payload[\"consumed\"] = { \"voltage\": source[\"voltage\"], \"current\": consumedCurrent}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1605,
        "y": 1600,
        "wires": [
            [
                "2b369c1741cc9ef6",
                "0b1328f40a1516f9"
            ]
        ],
        "l": false
    },
    {
        "id": "0b1328f40a1516f9",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "38368fc655a747d7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"output\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1635,
        "y": 1600,
        "wires": [
            [
                "e508b7ba44c26253"
            ]
        ],
        "l": false
    },
    {
        "id": "e5d2efe201e71691",
        "type": "mqtt in",
        "z": "ed6fc9b850d374ff",
        "g": "3b359d0aad2cca26",
        "name": "Generator",
        "topic": "client/generetor/device3/data",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9247c215d6f5dddb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1240,
        "y": 1960,
        "wires": [
            [
                "a9c807796e660481"
            ]
        ]
    },
    {
        "id": "a9c807796e660481",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "3b359d0aad2cca26",
        "name": "function 3",
        "func": "if (msg.payload && msg.payload.isWorking) {\n    if (msg.payload.input_data) {         \n        msg.payload = msg.payload.input_data;\n        msg.topic = \"input_data\";\n        return msg;\n    }\n}\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1315,
        "y": 1960,
        "wires": [
            [
                "100940c2d95fb2b4"
            ]
        ],
        "l": false
    },
    {
        "id": "dc676fdb3abf8f7e",
        "type": "debug",
        "z": "ed6fc9b850d374ff",
        "g": "3b359d0aad2cca26",
        "name": "CurrentLine3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 1900,
        "wires": []
    },
    {
        "id": "d92d810ec03d2994",
        "type": "debug",
        "z": "ed6fc9b850d374ff",
        "g": "dc5a4ca141aca5d9",
        "name": "CurrentLine2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 1600,
        "wires": []
    },
    {
        "id": "bb64550542faf8c9",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "8d6324e4b84c3c21",
        "name": "function",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"consumed\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1455,
        "y": 1660,
        "wires": [
            [
                "6d40defa905a4c24"
            ]
        ],
        "l": false
    },
    {
        "id": "6d40defa905a4c24",
        "type": "mqtt out",
        "z": "ed6fc9b850d374ff",
        "g": "8d6324e4b84c3c21",
        "name": "sensor",
        "topic": "client/consumersensor/device3/data",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9247c215d6f5dddb",
        "x": 1485,
        "y": 1660,
        "wires": [],
        "l": false
    },
    {
        "id": "36bc783664bc5319",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "8d6324e4b84c3c21",
        "name": "Consumer",
        "func": "let source = msg.payload;\nlet coefficients = global.get(\"coefficients\")\nlet index = global.get(\"index\")\nlet currentCoefficients = coefficients[index];\nlet consumption_ratio = Math.random() * currentCoefficients[1];\nlet staticCurrentСonsumption = source[\"current\"]*0.1;\nlet consumedCurrent = source[\"current\"] * consumption_ratio + staticCurrentСonsumption;\nlet outPutCurrent = source[\"current\"] - consumedCurrent;\nmsg.payload[\"output\"] = {\"voltage\":source[\"voltage\"], \"current\":outPutCurrent}\nmsg.payload[\"consumed\"] = { \"voltage\": source[\"voltage\"], \"current\": consumedCurrent}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1385,
        "y": 1600,
        "wires": [
            [
                "bb64550542faf8c9",
                "56de72dee2125192"
            ]
        ],
        "l": false
    },
    {
        "id": "56de72dee2125192",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "8d6324e4b84c3c21",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"output\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1415,
        "y": 1600,
        "wires": [
            [
                "fb1c98c8da522669"
            ]
        ],
        "l": false
    },
    {
        "id": "410ee238c1d9f347",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "d94c04ce11127202",
        "name": "function",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"consumed\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1785,
        "y": 1400,
        "wires": [
            [
                "5358ce8276693dd9"
            ]
        ],
        "l": false
    },
    {
        "id": "5358ce8276693dd9",
        "type": "mqtt out",
        "z": "ed6fc9b850d374ff",
        "g": "d94c04ce11127202",
        "name": "sensor",
        "topic": "client/consumersensor/device1/data",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9247c215d6f5dddb",
        "x": 1815,
        "y": 1400,
        "wires": [],
        "l": false
    },
    {
        "id": "8231dcf80c6ca09a",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "d94c04ce11127202",
        "name": "Consumer",
        "func": "let source = msg.payload;\nlet coefficients = global.get(\"coefficients\")\nlet index = global.get(\"index\")\nlet currentCoefficients = coefficients[index];\nlet consumption_ratio = Math.random() * currentCoefficients[0];\n\nlet staticCurrentСonsumption = source[\"current\"]*0.1;\nlet consumedCurrent = source[\"current\"] * consumption_ratio + staticCurrentСonsumption;\nlet outPutCurrent = source[\"current\"] - consumedCurrent;\nmsg.payload[\"output\"] = {\"voltage\":source[\"voltage\"], \"current\":outPutCurrent}\nmsg.payload[\"consumed\"] = { \"voltage\": source[\"voltage\"], \"current\": consumedCurrent}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1715,
        "y": 1340,
        "wires": [
            [
                "410ee238c1d9f347",
                "c196e93651cf910d"
            ]
        ],
        "l": false
    },
    {
        "id": "c196e93651cf910d",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "d94c04ce11127202",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"output\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1745,
        "y": 1340,
        "wires": [
            [
                "7aa44d4855b16267"
            ]
        ],
        "l": false
    },
    {
        "id": "006d2159453d3533",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "60d6ceed67416d95",
        "name": "function",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"consumed\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1485,
        "y": 1960,
        "wires": [
            [
                "30271801c18339d7"
            ]
        ],
        "l": false
    },
    {
        "id": "30271801c18339d7",
        "type": "mqtt out",
        "z": "ed6fc9b850d374ff",
        "g": "60d6ceed67416d95",
        "name": "sensor",
        "topic": "client/consumersensor/device4/data",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9247c215d6f5dddb",
        "x": 1515,
        "y": 1960,
        "wires": [],
        "l": false
    },
    {
        "id": "100940c2d95fb2b4",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "60d6ceed67416d95",
        "name": "Consumer",
        "func": "let source = msg.payload;\nlet coefficients = global.get(\"coefficients\")\nlet index = global.get(\"index\")\nlet currentCoefficients = coefficients[index];\nlet consumption_ratio = Math.random() * currentCoefficients[2];\nlet staticCurrentСonsumption = source[\"current\"]*0.1;\nlet consumedCurrent = source[\"current\"] * consumption_ratio + staticCurrentСonsumption;\nlet outPutCurrent = source[\"current\"] - consumedCurrent;\nmsg.payload[\"output\"] = {\"voltage\":source[\"voltage\"], \"current\":outPutCurrent}\nmsg.payload[\"consumed\"] = { \"voltage\": source[\"voltage\"], \"current\": consumedCurrent}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1415,
        "y": 1900,
        "wires": [
            [
                "006d2159453d3533",
                "c75694c09fd54100"
            ]
        ],
        "l": false
    },
    {
        "id": "c75694c09fd54100",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "60d6ceed67416d95",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"output\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1445,
        "y": 1900,
        "wires": [
            [
                "da55bcf17e243f42"
            ]
        ],
        "l": false
    },
    {
        "id": "0253e0acea643727",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "f01ffa43f38001a4",
        "name": "function",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"consumed\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1705,
        "y": 1960,
        "wires": [
            [
                "31c4945f256e5ddb"
            ]
        ],
        "l": false
    },
    {
        "id": "31c4945f256e5ddb",
        "type": "mqtt out",
        "z": "ed6fc9b850d374ff",
        "g": "f01ffa43f38001a4",
        "name": "sensor",
        "topic": "client/consumersensor/device5/data",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9247c215d6f5dddb",
        "x": 1735,
        "y": 1960,
        "wires": [],
        "l": false
    },
    {
        "id": "da55bcf17e243f42",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "f01ffa43f38001a4",
        "name": "Consumer",
        "func": "let source = msg.payload;\nlet coefficients = global.get(\"coefficients\")\nlet index = global.get(\"index\")\nlet currentCoefficients = coefficients[index];\nlet consumption_ratio = Math.random() * currentCoefficients[2];\nlet staticCurrentСonsumption = source[\"current\"]*0.1;\nlet consumedCurrent = source[\"current\"] * consumption_ratio + staticCurrentСonsumption;\nlet outPutCurrent = source[\"current\"] - consumedCurrent;\nmsg.payload[\"output\"] = {\"voltage\":source[\"voltage\"], \"current\":outPutCurrent}\nmsg.payload[\"consumed\"] = { \"voltage\": source[\"voltage\"], \"current\": consumedCurrent}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1635,
        "y": 1900,
        "wires": [
            [
                "0253e0acea643727",
                "0f5cc417cc08d9be"
            ]
        ],
        "l": false
    },
    {
        "id": "0f5cc417cc08d9be",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "f01ffa43f38001a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"output\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1665,
        "y": 1900,
        "wires": [
            [
                "2b634e503e9abf41"
            ]
        ],
        "l": false
    },
    {
        "id": "fb6b6821f8fc65e5",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "3821a06871a1cf90",
        "name": "function",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"consumed\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1925,
        "y": 1960,
        "wires": [
            [
                "c41fbb91bc8e880a"
            ]
        ],
        "l": false
    },
    {
        "id": "c41fbb91bc8e880a",
        "type": "mqtt out",
        "z": "ed6fc9b850d374ff",
        "g": "3821a06871a1cf90",
        "name": "sensor",
        "topic": "client/consumersensor/device6/data",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9247c215d6f5dddb",
        "x": 1955,
        "y": 1960,
        "wires": [],
        "l": false
    },
    {
        "id": "2b634e503e9abf41",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "3821a06871a1cf90",
        "name": "Consumer",
        "func": "let source = msg.payload;\nlet coefficients = global.get(\"coefficients\")\nlet index = global.get(\"index\")\nlet currentCoefficients = coefficients[index];\nlet consumption_ratio = Math.random() * currentCoefficients[2];\nlet staticCurrentСonsumption = source[\"current\"]*0.1;\nlet consumedCurrent = source[\"current\"] * consumption_ratio + staticCurrentСonsumption;\nlet outPutCurrent = source[\"current\"] - consumedCurrent;\nmsg.payload[\"output\"] = {\"voltage\":source[\"voltage\"], \"current\":outPutCurrent}\nmsg.payload[\"consumed\"] = { \"voltage\": source[\"voltage\"], \"current\": consumedCurrent}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1855,
        "y": 1900,
        "wires": [
            [
                "fb6b6821f8fc65e5",
                "25429cb187bfeffa"
            ]
        ],
        "l": false
    },
    {
        "id": "25429cb187bfeffa",
        "type": "change",
        "z": "ed6fc9b850d374ff",
        "g": "3821a06871a1cf90",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"output\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1885,
        "y": 1900,
        "wires": [
            [
                "4b5f3d55970b8983"
            ]
        ],
        "l": false
    },
    {
        "id": "f6dc9a60ad3987b5",
        "type": "inject",
        "z": "ed6fc9b850d374ff",
        "g": "b89a0935f6fe7b0a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 335,
        "y": 1120,
        "wires": [
            [
                "8ec30c1b65ed8457"
            ]
        ],
        "l": false
    },
    {
        "id": "8ec30c1b65ed8457",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "b89a0935f6fe7b0a",
        "name": "function 4",
        "func": "let index = global.get(\"index\");\nindex = (index + 1) % 3;\nglobal.set(\"index\", index);\nlet source = 10\nlet coefficients = global.get(\"coefficients\")\nlet currentCoefficients = coefficients[index];\n\n// Рассчитываем значения для каждой линии\nlet line1ConsumptionRatio =  currentCoefficients[0];\nlet staticConsumptionLine1 = source * 0.1;\nlet consumedLine1 = source * line1ConsumptionRatio + staticConsumptionLine1;\nlet outPutLine1 = source - consumedLine1;\n\nlet line2ConsumptionRatio =  currentCoefficients[1];\nlet staticConsumptionLine2 = source * 0.1;\nlet consumedLine2 = source * line2ConsumptionRatio + staticConsumptionLine2;\nlet outPutLine2 = source - consumedLine2;\n\nlet line3ConsumptionRatio =  currentCoefficients[2];\nlet staticConsumptionLine3 = source * 0.1;\nlet consumedLine3 = source * line3ConsumptionRatio + staticConsumptionLine3;\nlet outPutLine3 = source - consumedLine3;\n\n// Формируем итоговый payload\nmsg.payload = {\n    line1: line1ConsumptionRatio,\n    line2: line2ConsumptionRatio,\n    line3: line3ConsumptionRatio\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Установка значения\nglobal.set(\"coefficients\", [[0.4, 0.1, 0.1], [0.1, 0.4, 0.1], [0.1, 0.1, 0.6]]);\nglobal.set(\"index\", 0); // Начальный индекс\n",
        "finalize": "",
        "libs": [],
        "x": 375,
        "y": 1120,
        "wires": [
            [
                "7319b8fb2699fda4"
            ]
        ],
        "l": false
    },
    {
        "id": "7319b8fb2699fda4",
        "type": "debug",
        "z": "ed6fc9b850d374ff",
        "g": "b89a0935f6fe7b0a",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 415,
        "y": 1120,
        "wires": [],
        "l": false
    },
    {
        "id": "4b5f3d55970b8983",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "3b359d0aad2cca26",
        "name": "CurrentLine3",
        "func": "if(msg.payload[\"current\"]<3){\n    global.set(\"isThirdLineCongestion\", true)\n    node.error(\"Перевантаження!\", msg);\n    return null;\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2155,
        "y": 1900,
        "wires": [
            [
                "dc676fdb3abf8f7e"
            ]
        ],
        "l": false
    },
    {
        "id": "c7eb2dea3371c873",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "628a3f0f8ba0748f",
        "name": "function 7",
        "func": "global.set(\"isThirdLineCongestion\", false)\nglobal.set(\"lineThirdTransaction\", false)\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1035,
        "y": 1960,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "08bd37463ab1899c",
        "type": "switch",
        "z": "ed6fc9b850d374ff",
        "g": "628a3f0f8ba0748f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "LineCongestion",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1005,
        "y": 1900,
        "wires": [
            [
                "690ef4e684a6bd33"
            ],
            [
                "31ca889f5b44e7e1"
            ]
        ],
        "l": false
    },
    {
        "id": "87ddce3618d3f4e2",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "628a3f0f8ba0748f",
        "name": "function 8",
        "func": "if (global.get(\"isThirdLineCongestion\")){\n    msg.payload = \"LineCongestion\"\n    return msg\n}else{\nreturn msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Добавленный здесь код будет исполняться\n// однократно при развертывании узла.\nglobal.set(\"lineThirdTransaction\", false)\nglobal.set(\"isThirdLineCongestion\", false)",
        "finalize": "",
        "libs": [],
        "x": 975,
        "y": 1900,
        "wires": [
            [
                "08bd37463ab1899c"
            ]
        ],
        "l": false
    },
    {
        "id": "e508b7ba44c26253",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "dc5a4ca141aca5d9",
        "name": "CurrentLine2",
        "func": "if(msg.payload[\"current\"]<3){\n    global.set(\"isSecondLineCongestion\", true)\n    node.error(\"Перевантаження!\", msg);\n    return null;\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2055,
        "y": 1600,
        "wires": [
            [
                "d92d810ec03d2994"
            ]
        ],
        "l": false
    },
    {
        "id": "7aa44d4855b16267",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "1d60f77e2f32593d",
        "name": "CurrentLine1",
        "func": "if(msg.payload[\"current\"]<3){\n    global.set(\"isFirstLineCongestion\", true)\n    node.error(\"Перевантаження!\", msg);\n    return null;\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2025,
        "y": 1340,
        "wires": [
            [
                "fa5e7da91dbafed2"
            ]
        ],
        "l": false
    },
    {
        "id": "4c3a7395e37e9090",
        "type": "debug",
        "z": "ed6fc9b850d374ff",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 2300,
        "wires": []
    },
    {
        "id": "3a72e4edb3faddd7",
        "type": "trigger",
        "z": "ed6fc9b850d374ff",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 280,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "8378de078689c619",
        "type": "delay",
        "z": "ed6fc9b850d374ff",
        "g": "628a3f0f8ba0748f",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1015,
        "y": 1960,
        "wires": [
            [
                "c7eb2dea3371c873"
            ]
        ],
        "l": false
    },
    {
        "id": "690ef4e684a6bd33",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "628a3f0f8ba0748f",
        "name": "function 11",
        "func": "if (global.get(\"lineThirdTransaction\")){\n    return null;\n}\nglobal.set(\"lineThirdTransaction\", true)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 985,
        "y": 1960,
        "wires": [
            [
                "8378de078689c619"
            ]
        ],
        "l": false
    },
    {
        "id": "d0ed9851a302930f",
        "type": "inject",
        "z": "ed6fc9b850d374ff",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 820,
        "y": 2300,
        "wires": [
            [
                "2eccab7687e83c06"
            ]
        ]
    },
    {
        "id": "2eccab7687e83c06",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "name": "function 12",
        "func": "msg.payload = global.get(\"isThirdLineCongestion\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 2300,
        "wires": [
            [
                "4c3a7395e37e9090"
            ]
        ]
    },
    {
        "id": "fc5260c2d5a28aef",
        "type": "debug",
        "z": "ed6fc9b850d374ff",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 2200,
        "wires": []
    },
    {
        "id": "e91d62efa5b8e092",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "201e278336a2a40b",
        "name": "function 13",
        "func": "global.set(\"isFirstLineCongestion\", false)\nglobal.set(\"lineFirstTransaction\", false)\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1015,
        "y": 1400,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "9705f1a56879f512",
        "type": "switch",
        "z": "ed6fc9b850d374ff",
        "g": "201e278336a2a40b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "LineCongestion",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 995,
        "y": 1340,
        "wires": [
            [
                "fc773309f830ab31"
            ],
            [
                "f8ee96304d8ee4b0"
            ]
        ],
        "l": false
    },
    {
        "id": "e80a6f9cd4a8fa7a",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "201e278336a2a40b",
        "name": "function 14",
        "func": "if (global.get(\"isFirstLineCongestion\")){\n    msg.payload = \"LineCongestion\"\n    return msg\n}else{\nreturn msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Добавленный здесь код будет исполняться\n// однократно при развертывании узла.\nglobal.set(\"lineFirstTransaction\", false)\nglobal.set(\"isFirstLineCongestion\", false)",
        "finalize": "",
        "libs": [],
        "x": 965,
        "y": 1340,
        "wires": [
            [
                "9705f1a56879f512"
            ]
        ],
        "l": false
    },
    {
        "id": "6eef64f6b9f89dde",
        "type": "delay",
        "z": "ed6fc9b850d374ff",
        "g": "201e278336a2a40b",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 995,
        "y": 1400,
        "wires": [
            [
                "e91d62efa5b8e092"
            ]
        ],
        "l": false
    },
    {
        "id": "fc773309f830ab31",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "201e278336a2a40b",
        "name": "function 15",
        "func": "if (global.get(\"lineFirstTransaction\")){\n    return null;\n}\nglobal.set(\"lineFirstTransaction\", true)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 965,
        "y": 1400,
        "wires": [
            [
                "6eef64f6b9f89dde"
            ]
        ],
        "l": false
    },
    {
        "id": "5480dc6b15e084d4",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "c424c808617f5be2",
        "name": "function 16",
        "func": "global.set(\"isSecondLineCongestion\", false)\nglobal.set(\"lineSecondTransaction\", false)\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1025,
        "y": 1660,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "e6cc48740b1cf28e",
        "type": "switch",
        "z": "ed6fc9b850d374ff",
        "g": "c424c808617f5be2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "LineCongestion",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1005,
        "y": 1600,
        "wires": [
            [
                "a820249c46dcdec7"
            ],
            [
                "6705a400ab98dbb8"
            ]
        ],
        "l": false
    },
    {
        "id": "62ca22bb0dcf7e86",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "c424c808617f5be2",
        "name": "function 17",
        "func": "if (global.get(\"isSecondLineCongestion\")){\n    msg.payload = \"LineCongestion\"\n    return msg\n}else{\nreturn msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Добавленный здесь код будет исполняться\n// однократно при развертывании узла.\nglobal.set(\"lineSecondTransaction\", false)\nglobal.set(\"isSecondLineCongestion\", false)",
        "finalize": "",
        "libs": [],
        "x": 975,
        "y": 1600,
        "wires": [
            [
                "e6cc48740b1cf28e"
            ]
        ],
        "l": false
    },
    {
        "id": "2177c81d5fe32716",
        "type": "delay",
        "z": "ed6fc9b850d374ff",
        "g": "c424c808617f5be2",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1005,
        "y": 1660,
        "wires": [
            [
                "5480dc6b15e084d4"
            ]
        ],
        "l": false
    },
    {
        "id": "a820249c46dcdec7",
        "type": "function",
        "z": "ed6fc9b850d374ff",
        "g": "c424c808617f5be2",
        "name": "function 18",
        "func": "if (global.get(\"lineSecondTransaction\")){\n    return null;\n}\nglobal.set(\"lineSecondTransaction\", true)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 975,
        "y": 1660,
        "wires": [
            [
                "2177c81d5fe32716"
            ]
        ],
        "l": false
    }
]